// Fourier series Model Of The Market
// John F. Ehlers
// TASC Jun 2019
// http://traders.com/Documentation/FEEDbk_docs/2019/06/TradersTips.html
// Created by e2e4mfck for tradingview.com

// This indicator is desgined to help traders identify cycles (primary cycle period) in the market

//@version=4

title = "Fourier series Model Of The Market"
version = ""
study (title=title+version, overlay=false)


// - - - - - Inputs - - - - - //
src0 = (open)
src1 = (high)
src2 = (low)
src3 = (close)
src4 = (hl2)
src5 = (hlc3)
src6 = (ohlc4)

Period = input(20, type=input.integer)
Bandwidth = input(0.1, type=input.float)

PI = 3.1415926
X1 = src3 - src3[2]

L1 = cos(2*PI/Period)
L2 = cos(2*PI/(Period/2))
L3 = cos(2*PI/(Period/3))

G1 = cos(Bandwidth*2*PI/Period)
G2 = cos(Bandwidth*2*PI/(Period/2))
G3 = cos(Bandwidth*2*PI/(Period/3))

S1 = 1/G1 - sqrt(1/(G1*G1)-1)
S2 = 1/G2 - sqrt(1/(G2*G2)-1)
S3 = 1/G3 - sqrt(1/(G3*G3)-1)


// - - - - - Band-Pass Filter - - - - - //
float F1 = 0
if bar_index <= 3
	F1 := 0
else
	F1 := 0.5*(1-S1)*X1 + L1*(1+S1)*F1[1] - S1*F1[2]
	
	
// - - - - - Quadrature - - - - - //
float Q1 = 0
if bar_index <= 4
	Q1 := 0
else
	Q1 := (Period/6.28) * (F1-F1[1])


// - - - - - 2nd Harmonic Band-Pass Filter - - - - - //
float F2 = 0
if bar_index <= 3
	F2 := 0
else
	F2 := 0.5*(1-S2)*X1 + L2*(1+S2)*F2[1] - S2*F2[2]
	

// - - - - - 2nd Harmonic Quadrature - - - - - //
float Q2 = 0
if bar_index <= 4
	Q2 := 0
else
	Q2 := (Period/6.28) * (F2-F2[1])
	
	
// - - - - - 3rd Harmonic Band-Pass Filter - - - - - //
float F3 = 0
if bar_index <= 3
	F3 := 0
else
	F3 := 0.5*(1-S3)*X1 + L3*(1+S3)*F3[1] - S3*F3[2]
	

// - - - - - 3rd Harmonic Quadrature - - - - - //
float Q3 = 0
if bar_index <= 4
	Q3 := 0
else
	Q3 := (Period/6.28) * (F3-F3[1])
	

// - - - - - Harmonic Sum - - - - - //
float P1 = 0
float P2 = 0
float P3 = 0
for i = 0 to (Period-1)
	P1 := P1 + F1[i]*F1[i] + Q1[i]*Q1[i]
	P2 := P2 + F2[i]*F2[i] + Q2[i]*Q2[i]
	P3 := P3 + F3[i]*F3[i] + Q3[i]*Q3[i]

// - - - - - Harmonic Sum (combined) - - - - - //
float Wave = 0
if P1 == 0
    Wave := 0
else
	Wave := F1 + sqrt(P2/P1)*F2 + sqrt(P3/P2)*F3


// - - - - - ROC cyclic signal - - - - - //
ROC = (Period/12.57)*(Wave-Wave[2])


// - - - - - Plot - - - - - //
plot (Wave, title="Wave" , style=plot.style_line    , color=color.red   , linewidth=2)
plot (ROC , title="ROC"  , style=plot.style_line  , color=color.blue  , linewidth=2)
hline(0.0 , title="Zero" , linestyle=hline.style_dashed , color=color.black , linewidth=1)

// Suggested usage:
//    ROC cross over 0 -> Long
//    ROC cross under 0 -> Short